#ifndef _IMP_MAGIC_UNIT_HPP_
#define _IMP_MAGIC_UNIT_HPP_

#include < list >
#include < memory >

#include "spell.hpp"
#include "API_Unit.hpp"
#include "API_Magic_Unit.hpp"


//*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*//

namespace Game_Model
{
	namespace Implementation
	{
	
	typedef
	std::list<  Spell * >
	ContainerType;

//*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*//

	class Magic_Unit : Game_Model::Magic_Unit, Game_Model::Implementation::Unit
	{
		
//*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*//
	
	public:

		Magic_Unit(){}

		virtual double getCurentMPU () const ;
		virtual double getMaxMPU () const ;



//*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*//
	
	private:
		
		double m_curentMPU;
		double m_maxMPU;
		ContainerType spellContainer;
	};

//*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*//
	
	}
}

//*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*//

#endif // !_IMP_MAGIC_UNIT_HPP_
